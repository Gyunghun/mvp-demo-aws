# 2020.03.20 Ver.16
version: 2
orbs:
  slack: circleci/slack@3.3.0

tf-k8s: &tf-k8s
  docker:
    - image: mungi/terraform-aws-k8s
  working_directory: ~/project

tf-run: &tf-run
  command: |
    cd ${MODULE_DIR}; pwd
    ../set_aws_configure.sh
    terraform init -input=false -backend-config="../project.tfvars"
    terraform plan  -var-file="../project.tfvars"
    terraform apply -var-file="../project.tfvars" -auto-approve

terraform-run: &terraform-run
  docker:
    - image: mungi/terraform-aws-k8s
  working_directory: ~/project
  steps:
    - checkout
    - run:
        name: Run terraform at ${MODULE_DIR}
        command: |
          cd ${MODULE_DIR}; pwd; env
          ../set_aws_configure.sh
          terraform init -input=false -backend-config="../project.tfvars"
          terraform plan  -var-file="../project.tfvars"
          terraform apply -var-file="../project.tfvars" -auto-approve

jobs:
  build:
    <<: *tf-k8s
    steps:
      - checkout
      - run:
          name: Workflow Start job
          command: |
            echo "Workflow Start!"
            echo $(pwd)
            ./set_aws_configure.sh
            aws sts get-caller-identity --profile cs1u

  demo-vpc:
    environment:
      MODULE_DIR: vpc
    <<: *terraform-run

  demo-s3:
    environment:
      MODULE_DIR: S3
    <<: *terraform-run

  demo-efs:
    environment:
      MODULE_DIR: efs
    <<: *terraform-run

  demo-es:
    environment:
      MODULE_DIR: elasticsearch
    <<: *terraform-run

  demo-ec2:
    environment:
      MODULE_DIR: ec2
    <<: *terraform-run

  demo-eks:
    environment:
      MODULE_DIR: eks
      KUBECONFIG: kubeconfig_skcc-aws-general
    <<: *terraform-run

  demo-telemetry:
    <<: *tf-k8s
    steps:
      - checkout
      - run:
          command: |
            ./set_aws_configure.sh; 
            aws eks --region ap-northeast-2 update-kubeconfig --name mvp-demo-tp2
            # kubectl create namespace istio-system2
            # helm template install/kubernetes/helm/istio-init istio-init --namespace istio-system2 | kubectl apply -f -
            # sleep 30s
            # kubectl get crds -n istio-system2 | grep 'istio.io\|certmanager.k8s.io' | wc -l
            # helm template install/kubernetes/helm/istio --values install/kubernetes/helm/istio/values-istio-demo.yaml istio --namespace istio-system2 | kubectl apply -f -
            # sleep 30s
            # apk add curl; curl -sL https://istio.io/downloadIstioctl | sh -; export PATH=$PATH:$HOME/.istioctl/bin
            # kubectl apply -f <(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)
            # sleep 30s
            # kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml
            echo "Complete"

  demo-apps:
    <<: *tf-k8s
    steps:
      - checkout
      - run:
          command: |
            ./set_aws_configure.sh; 
            aws eks --region ap-northeast-2 update-kubeconfig --name mvp-demo-tp2
            echo "Complete"

  demo-notify:
    <<: *tf-k8s
    steps:
      - run:
          command: |
            echo "Complete"

workflows:
  version: 2
  demo-pipeline:
    jobs:
      - build
      - hold:
          type: approval
          requires:
            - build

      - demo-vpc:
          requires:
            - hold
      - demo-s3:
          requires:
            - demo-vpc
      - demo-efs:
          requires:
            - demo-vpc
      - demo-ec2:
          requires:
            - demo-vpc
      - demo-es:
          requires:
            - demo-vpc

      - demo-eks:
          requires:
            - demo-vpc      
      - demo-telemetry:
          requires:
            - demo-eks
      - demo-apps:
          requires:
            - demo-telemetry

      - demo-notify:
          requires:
            - demo-s3
            - demo-efs
            - demo-ec2
            - demo-es
            - demo-apps

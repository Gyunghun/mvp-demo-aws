# 2020.03.20 Ver.16
version: 2
orbs:
  slack: circleci/slack@3.3.0

terraform: &terraform
  docker:
    - image: mungi/cloud-cli
  working_directory: ~/project

jobs:
  build:
    <<: *terraform
    steps:
      - checkout
      - run:
          name: Workflow Start job
          command: |
            echo "Workflow Start!"
            echo $(pwd)
            ./set_aws_configure.sh
            aws sts get-caller-identity
  demo-vpc:
    <<: *terraform
    steps:
      - checkout
      - run:
          command: |
            ./set_aws_configure.sh; cd vpc
            terraform init -input=false -backend-config="profile=cs1u"
            terraform plan; terraform apply -auto-approve
  demo-s3:
    <<: *terraform
    steps:
      - checkout
      - run:
          command: |
            ./set_aws_configure.sh; cd S3
            terraform init -input=false -backend-config="profile=cs1u"
            terraform plan; terraform apply -auto-approve
  demo-eks:
    <<: *terraform
    steps:
      - checkout
      - run:
          command: |
            ./set_aws_configure.sh; cd eks
            aws eks --region ap-northeast-2 update-kubeconfig --name mvp-demo-tp2
            terraform init -input=false -backend-config="profile=cs1u"
            terraform plan; terraform apply -auto-approve
  demo-es:
    <<: *terraform
    steps:
      - checkout
      - run:
          command: |
            ./set_aws_configure.sh; cd elasticsearch
            terraform init -input=false -backend-config="profile=cs1u"
            terraform plan; terraform apply -auto-approve
  demo-efs:
    <<: *terraform
    steps:
      - checkout
      - run:
          command: |
            ./set_aws_configure.sh; cd efs
            terraform init -input=false -backend-config="profile=cs1u"
            terraform plan; terraform apply -auto-approve

workflows:
  version: 2
  demo-pipeline:
    jobs:
      - build
      - hold:
          type: approval
          requires:
            - build
      - demo-vpc:
          requires:
            - hold
      - demo-s3:
          requires:
            - demo-vpc
      - demo-efs:
          requires:
            - demo-vpc
      - demo-eks:
          requires:
            - demo-vpc
      - demo-es:
          requires:
            - demo-vpc
      - demo-notify:
          requires:
            - demo-s3
            - demo-efs
            - demo-eks
            - demo-es